{"title":"CPP第七次上机实验","uid":"f5549e64dae0916ed3c2d5ca434b3e7c","slug":"CPP第七次上机实验","date":"2022-09-08T01:56:17.000Z","updated":"2023-02-28T17:40:56.542Z","comments":true,"path":"api/articles/CPP第七次上机实验.json","keywords":null,"cover":[],"content":"<p>组合模式的应用，每个公司都有总部，多个分公司，多个办事处等，为上下级同构的实体关系。每个公司有人力部，财务部，销售部等职能部门，不再有下级部门，分公司下面继续有子公司。总部需要快速了解总公司的组织结构+实体职责展示。两个多态函数，输出文字即可。</p>\n<h2 id=\"题目要求\"><a href=\"#题目要求\" class=\"headerlink\" title=\"题目要求\"></a><strong>题目要求</strong></h2><p>1）应用组合模式的模式设计方式。</p>\n<p>2）建立上下级同构的实体关系。</p>\n<p>3）总部需要快速了解总公司的组织结构和实体职责展示，使用多态函数，输出文字。</p>\n<h2 id=\"组合模式设计图\"><a href=\"#组合模式设计图\" class=\"headerlink\" title=\"组合模式设计图\"></a><strong>组合模式设计图</strong></h2><p>设计一个University类，包含attach，detach，display和lineofduty函数。Compus类和各Department类通过继承University类，实现Component和Leaf部分的设计。其中可以通过attach函数绑定下属部门，通过detach函数删除下属部门。通过display和lineofduty两个多态函数实现输出结构以及各部门只能，各Department类直接输出自己的内容，其它类在完成自身输出后继续输出自己下属部门。</p>\n<p><img src=\"https://link.jscdn.cn/sharepoint/aHR0cHM6Ly9tYWlsc2psdWVkdWNuLW15LnNoYXJlcG9pbnQuY29tLzppOi9nL3BlcnNvbmFsL21lbmdzajU1MjFfbWFpbHNfamx1X2VkdV9jbi9FV2F5VUt1amtvNUNnblg3amx2YmFhc0JqN3hGUFZQdU5SaF9HWGV6MEZyZGNR.jpg\"></p>\n<h2 id=\"本题测试使用的结构\"><a href=\"#本题测试使用的结构\" class=\"headerlink\" title=\"本题测试使用的结构\"></a><strong>本题测试使用的结构</strong></h2><p>学校下属有学院和教务部等部门，教务部的等部门下属不再设下属部门，学院下属继续设置下属部门。</p>\n<p><img src=\"https://link.jscdn.cn/sharepoint/aHR0cHM6Ly9tYWlsc2psdWVkdWNuLW15LnNoYXJlcG9pbnQuY29tLzppOi9nL3BlcnNvbmFsL21lbmdzajU1MjFfbWFpbHNfamx1X2VkdV9jbi9FVVc2ZUdDU1dwNUV2N21QMjFsSEtyNEJWYVVfZnBEYVVWQUNRNDF1UEN2NFlR.jpg\"></p>\n<h2 id=\"程序难点\"><a href=\"#程序难点\" class=\"headerlink\" title=\"程序难点\"></a><strong>程序难点</strong></h2><p>1）多态函数的使用。</p>\n<p>使用虚函数，以及继承，多态等知识完成多态函数的建立。</p>\n<p>2）下级部门的储存方式。</p>\n<p>使用STL中的list容器，储存实例中学校或学院的子部门。</p>\n<h2 id=\"不使用多态如何实现，以及困难\"><a href=\"#不使用多态如何实现，以及困难\" class=\"headerlink\" title=\"不使用多态如何实现，以及困难\"></a><strong>不使用多态如何实现，以及困难</strong></h2><p>可以每一个类都单独定义函数，麻烦在于难以访问其它封装类的内容，输出过程会相对困难。</p>\n<h2 id=\"我的收获\"><a href=\"#我的收获\" class=\"headerlink\" title=\"我的收获\"></a><strong>我的收获</strong></h2><p>对多态的运用有了更深的理解。初步了解组合模式的概念。</p>\n<h2 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a><strong>代码实现</strong></h2><p><strong><a href=\"https://github.com/LeoMeng86/JLU_cpp_experiment.git\">https://github.com/LeoMeng86/JLU_cpp_experiment.git</a></strong></p>\n","feature":true,"text":"组合模式的应用，每个公司都有总部，多个分公司，多个办事处等，为上下级同构的实体关系。每个公司有人力部，财务部，销售部等职能部门，不再有下级部门，分公司下面继续有子公司。总部需要快速了解总公司的组织结构+实体职责展示。两个多态函数，输出文字即可。 题目要求1）应用组合模式的模式设计...","link":"","photos":[],"count_time":{"symbolsCount":725,"symbolsTime":"1 mins."},"categories":[{"name":"C&C++","slug":"C-C","count":8,"path":"api/categories/C-C.json"}],"tags":[{"name":"CPP","slug":"CPP","count":8,"path":"api/tags/CPP.json"},{"name":"编程","slug":"编程","count":14,"path":"api/tags/编程.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E8%A6%81%E6%B1%82\"><span class=\"toc-text\">题目要求</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BB%84%E5%90%88%E6%A8%A1%E5%BC%8F%E8%AE%BE%E8%AE%A1%E5%9B%BE\"><span class=\"toc-text\">组合模式设计图</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9C%AC%E9%A2%98%E6%B5%8B%E8%AF%95%E4%BD%BF%E7%94%A8%E7%9A%84%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">本题测试使用的结构</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%A8%8B%E5%BA%8F%E9%9A%BE%E7%82%B9\"><span class=\"toc-text\">程序难点</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%8D%E4%BD%BF%E7%94%A8%E5%A4%9A%E6%80%81%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%EF%BC%8C%E4%BB%A5%E5%8F%8A%E5%9B%B0%E9%9A%BE\"><span class=\"toc-text\">不使用多态如何实现，以及困难</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%88%91%E7%9A%84%E6%94%B6%E8%8E%B7\"><span class=\"toc-text\">我的收获</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">代码实现</span></a></li></ol>","author":{"name":"Leo Meng","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/LeoMeng86","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"CPP课程设计","uid":"c440061768efe9bf5183c05fdcd8c615","slug":"CPP课程设计","date":"2022-10-29T08:38:54.000Z","updated":"2023-02-28T17:40:55.286Z","comments":true,"path":"api/articles/CPP课程设计.json","keywords":null,"cover":[],"text":"模拟即时通信系统实现设计任务分析使用C++设计一个模拟即时通讯系统，使用socket套接字通信技术，完成用户对用户的交流和群内交流，使用多态继承等面向对象技术，QQ，微信，微博系统的建立，实现群管理等功能。 设计方案本次实验使用Qt进行开发，完成可视化编程，网络通信编程,数据库编...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"C&C++","slug":"C-C","count":8,"path":"api/categories/C-C.json"}],"tags":[{"name":"CPP","slug":"CPP","count":8,"path":"api/tags/CPP.json"},{"name":"编程","slug":"编程","count":14,"path":"api/tags/编程.json"}],"author":{"name":"Leo Meng","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/LeoMeng86","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"CPP第六次上机实验","uid":"1510154d893520be8184890df2533c82","slug":"CPP第六次上机实验","date":"2022-09-08T01:56:05.000Z","updated":"2023-02-28T17:40:55.286Z","comments":true,"path":"api/articles/CPP第六次上机实验.json","keywords":null,"cover":null,"text":"模拟一个小型数据库系统（DBMS）的实现，最小化的实现数据库和数据表的管理，实现数据库和数据表和数据的增加，查询，修改和删除（可以考虑多态），数据存储使用oi类，储存文件可以用文本格式也可以用XML或者其他专门格式，操作指令发布可以使用界面，可以使用自定义管理器支持的简单字符命令...","link":"","photos":[],"count_time":{"symbolsCount":719,"symbolsTime":"1 mins."},"categories":[{"name":"C&C++","slug":"C-C","count":8,"path":"api/categories/C-C.json"}],"tags":[{"name":"CPP","slug":"CPP","count":8,"path":"api/tags/CPP.json"},{"name":"编程","slug":"编程","count":14,"path":"api/tags/编程.json"}],"author":{"name":"Leo Meng","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/LeoMeng86","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}