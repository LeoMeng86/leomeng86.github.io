{"title":"CPP课程设计","uid":"c440061768efe9bf5183c05fdcd8c615","slug":"CPP课程设计","date":"2022-10-29T08:38:54.000Z","updated":"2023-02-28T17:40:55.286Z","comments":true,"path":"api/articles/CPP课程设计.json","keywords":null,"cover":[],"content":"<h2 id=\"模拟即时通信系统实现\"><a href=\"#模拟即时通信系统实现\" class=\"headerlink\" title=\"模拟即时通信系统实现\"></a>模拟即时通信系统实现</h2><h3 id=\"设计任务分析\"><a href=\"#设计任务分析\" class=\"headerlink\" title=\"设计任务分析\"></a>设计任务分析</h3><p>使用C++设计一个模拟即时通讯系统，使用socket套接字通信技术，完成用户对用户的交流和群内交流，使用多态继承等面向对象技术，QQ，微信，微博系统的建立，实现群管理等功能。</p>\n<h3 id=\"设计方案\"><a href=\"#设计方案\" class=\"headerlink\" title=\"设计方案\"></a>设计方案</h3><p>本次实验使用Qt进行开发，完成可视化编程，网络通信编程,数据库编程和多线程编程任务，使用多态及继承等面向对象设计，基本实现前后端分离，客户端服务段分离。</p>\n<h4 id=\"客户端\"><a href=\"#客户端\" class=\"headerlink\" title=\"客户端\"></a>客户端</h4><h5 id=\"后端\"><a href=\"#后端\" class=\"headerlink\" title=\"后端\"></a>后端</h5><p>QQ端支持群和好友聊天，微信端仅支持好友交流，微博端为全体用户分享生活的平台，无好友机制。</p>\n<p>平台类的建立：建立platform_msj基类，QQ_platform_msj, WeChat_platform_msj,  WeiBo_platform_msj等三个派生类继承基类。</p>\n<p>用户类建立：建立users_msj类，设计QQ_users_msj类继承users_msj类。</p>\n<p>群类建立：建立Group_msj类。</p>\n<h5 id=\"前端\"><a href=\"#前端\" class=\"headerlink\" title=\"前端\"></a>前端</h5><p>设计6个页面：frontpage_msj, loginpage_msj, register_msj, friend_msj, tepclient_msj，groupmanage_msj。</p>\n<p>Frontpage_msj实现了QQ，微信，微博的选择，通过不同的QPushbutton的槽函数，使用platform_msj基类指针，new子类对象，并读取数据库中的相应用户信息，保存到QVector中。</p>\n<p><img src=\"http://link.jscdn.cn/sharepoint/aHR0cHM6Ly9tYWlsc2psdWVkdWNuLW15LnNoYXJlcG9pbnQuY29tLzppOi9nL3BlcnNvbmFsL21lbmdzajU1MjFfbWFpbHNfamx1X2VkdV9jbi9FZDJlZ0xjY0pudEpqZFZNTGhjbjZBb0JiTDNBUklGbmNDaEdlSHdZRk1GcU5n.jpg\"></p>\n<p>Loginpage_msj实现了登录功能，以及注册页面的跳转，通过对用户id和password的判断，实现对应用户登录，并从该用户对应的文件中读入相应好友以及群组信息。</p>\n<p><img src=\"http://link.jscdn.cn/sharepoint/aHR0cHM6Ly9tYWlsc2psdWVkdWNuLW15LnNoYXJlcG9pbnQuY29tLzppOi9nL3BlcnNvbmFsL21lbmdzajU1MjFfbWFpbHNfamx1X2VkdV9jbi9FUzIwaGpya0FKdFB0ZlNoOXlCUEZ4VUI4azJERlRCbXp5MWZmbTNMd3ZEQnFn.jpg\"></p>\n<p><img src=\"http://link.jscdn.cn/sharepoint/aHR0cHM6Ly9tYWlsc2psdWVkdWNuLW15LnNoYXJlcG9pbnQuY29tLzppOi9nL3BlcnNvbmFsL21lbmdzajU1MjFfbWFpbHNfamx1X2VkdV9jbi9FZGxUb3M5LUFFeExwcFRlT0lCWDZqOEJ0RThWN0RsSElXUGtVMHhGNWtZcWZ3.jpg\"></p>\n<p>Friendpage_msj实现了添加好友新建群以及群的功能，且使用了网络编程，加群和好友的方案均采用单方同意即可，同时在groupmanage_msj功能中，拉入好友以及删除群友，采用直接拉入和踢出的策略。</p>\n<p><img src=\"http://link.jscdn.cn/sharepoint/aHR0cHM6Ly9tYWlsc2psdWVkdWNuLW15LnNoYXJlcG9pbnQuY29tLzppOi9nL3BlcnNvbmFsL21lbmdzajU1MjFfbWFpbHNfamx1X2VkdV9jbi9FU0RqdjZnb2dxZE5oNGJ4TVVEMkdhRUJzTVNvRTgwWmczNDJnaWhMLUo3bU1B.jpg\"></p>\n<p><img src=\"http://link.jscdn.cn/sharepoint/aHR0cHM6Ly9tYWlsc2psdWVkdWNuLW15LnNoYXJlcG9pbnQuY29tLzppOi9nL3BlcnNvbmFsL21lbmdzajU1MjFfbWFpbHNfamx1X2VkdV9jbi9FZU83TENfbThoOUtvUzB4cFNPZzdHSUJKZ1dLYUd3X3RlSE1MTXpST19mUFBn.jpg\"></p>\n<p><img src=\"http://link.jscdn.cn/sharepoint/aHR0cHM6Ly9tYWlsc2psdWVkdWNuLW15LnNoYXJlcG9pbnQuY29tLzppOi9nL3BlcnNvbmFsL21lbmdzajU1MjFfbWFpbHNfamx1X2VkdV9jbi9FYnFmTEk2Yy1VUkhxNFZzM2pXY2dzb0JsTGlIYllPU1pIanZUOThuemlSeHBR.jpg\"></p>\n<p>Tcpclient_msj使用socket进行通讯，向服务端发送消息，同时接收服务端发来的消息。</p>\n<p><img src=\"http://link.jscdn.cn/sharepoint/aHR0cHM6Ly9tYWlsc2psdWVkdWNuLW15LnNoYXJlcG9pbnQuY29tLzppOi9nL3BlcnNvbmFsL21lbmdzajU1MjFfbWFpbHNfamx1X2VkdV9jbi9FWWkxWFJqNGwxbEZzRGJ4ZkxSZnlzWUJFRUhuUHhLcGZQeXduaklsQTU3aXNB.jpg\"></p>\n<h4 id=\"服务端\"><a href=\"#服务端\" class=\"headerlink\" title=\"服务端\"></a>服务端</h4><h5 id=\"后端-1\"><a href=\"#后端-1\" class=\"headerlink\" title=\"后端\"></a>后端</h5><p>继承了QTcpSocket类建立了tcpclientsocket_msj类，继承了QTcpServer类建立了Server_msj类。实现了收到消息通过QString类的section成员函数实现了##字符串之间的分割，通过其中附带的发送者信息和接收者信息查询已经完成绑定的socket，如果在线即转发消息，若不在线则转发其不在线消息。群和微博直接转发消息，不进行判断。</p>\n<h5 id=\"前端-1\"><a href=\"#前端-1\" class=\"headerlink\" title=\"前端\"></a>前端</h5><p>仅设计一个页面，通过QListWidget记录登录日志，通过QtextEdit记录收发信息。可使用广播功能向所有打开聊天框的用户转发消息。</p>\n<p><img src=\"http://link.jscdn.cn/sharepoint/aHR0cHM6Ly9tYWlsc2psdWVkdWNuLW15LnNoYXJlcG9pbnQuY29tLzppOi9nL3BlcnNvbmFsL21lbmdzajU1MjFfbWFpbHNfamx1X2VkdV9jbi9FV2lHN05hWDdaeEd2cmxZeGJRajZFQUJzTW9WNV9abDVOMU1fRXBDNkxuVFBB.jpg\"></p>\n<h3 id=\"详细设计\"><a href=\"#详细设计\" class=\"headerlink\" title=\"详细设计\"></a>详细设计</h3><h4 id=\"用户信息保存\"><a href=\"#用户信息保存\" class=\"headerlink\" title=\"用户信息保存\"></a>用户信息保存</h4><p>通过数据库读写，在选定平台后，读入信息，使用sql语言·，使用atEnd()成员函数判断是否读到文件尾部，以users_msj类存到platfrom_msj的QVector成员中。在注册时候，使用append模式，QTextStream流输入并在QVector中加入新信息。</p>\n<h4 id=\"好友和群的添加\"><a href=\"#好友和群的添加\" class=\"headerlink\" title=\"好友和群的添加\"></a>好友和群的添加</h4><p>分别在相应QVector中插入信息，同时向相应的文件中进行读写，再对界面进行更新。</p>\n<h4 id=\"微信QQ微博多平台实现\"><a href=\"#微信QQ微博多平台实现\" class=\"headerlink\" title=\"微信QQ微博多平台实现\"></a>微信QQ微博多平台实现</h4><p>通过设计platform_msj基类，设置了init()等接口，再使用QQ_platform_msj，WeChat_platform_msj，WeiBo_platform_msj等派生类对父类进行继承和重写，实现了多平台。其中QQ支持好友和群功能，微信支持好友功能，微博所有用户均在同一平台进行聊天。</p>\n<h4 id=\"不同平台用户存不同信息\"><a href=\"#不同平台用户存不同信息\" class=\"headerlink\" title=\"不同平台用户存不同信息\"></a>不同平台用户存不同信息</h4><p>设计users_msj类，使用QQ_users_msj继承父类，并派生，实现了QQ额外的存群列表的功能。</p>\n<h4 id=\"通信功能的实现\"><a href=\"#通信功能的实现\" class=\"headerlink\" title=\"通信功能的实现\"></a>通信功能的实现</h4><p>使用socket套接字通信的方式，通过继承Qt自带的QTcpServer和QTcpSocket类，使用connect信号和readyread信号，连接服务器和读取服务器发来的信息，通过重写QTcpServer的incomingConnection成员函数，实现保存客户端套接字和姓名。</p>\n<h4 id=\"消息的传递\"><a href=\"#消息的传递\" class=\"headerlink\" title=\"消息的传递\"></a>消息的传递</h4><p>进行消息传递时候，为实现点对点或点对群通信，使用QString的section成员函数，通过##分割各部分信息，在服务端进行解构，向指定客户端发送消息。</p>\n<h4 id=\"历史记录保存\"><a href=\"#历史记录保存\" class=\"headerlink\" title=\"历史记录保存\"></a>历史记录保存</h4><p>使用MySQL，每条信息按发送者，接收者，时间，消息进行存储，每次初始化时，从MySQL中将历史消息重新读入。</p>\n<h3 id=\"总结与体会\"><a href=\"#总结与体会\" class=\"headerlink\" title=\"总结与体会\"></a>总结与体会</h3><h4 id=\"优缺点\"><a href=\"#优缺点\" class=\"headerlink\" title=\"优缺点\"></a>优缺点</h4><p>使用了面向对象思想，使用可视化编程，网络通信编程，实现了点对点通信和点对群通信，使用数据库。</p>\n<h4 id=\"调试中遇到的问题\"><a href=\"#调试中遇到的问题\" class=\"headerlink\" title=\"调试中遇到的问题\"></a>调试中遇到的问题</h4><p>Qt使用信号和槽的方式传递信息，在connect信号和槽的过程中出现了许多错误，使用ui界面的相关槽的配合也带来了一定的麻烦。还有qt的父对象机制，在父对象析构之后会析构相应的子对象，导致部分页面无法显示。解决方法，在需要槽或信号的位置使用注释，理清思路，对相应父对象析构后，建立指向空对象的页面，防止页面被析构，在使用结束后进行析构，解除空间占用。</p>\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><p>本次课程设计使用了Qt进行可视化开发，Qt的库中的类均为继承关系，通过对Qt中类的使用，和自己设计不同类的过程中，更为了解了面向对象的思想。</p>\n","feature":true,"text":"模拟即时通信系统实现设计任务分析使用C++设计一个模拟即时通讯系统，使用socket套接字通信技术，完成用户对用户的交流和群内交流，使用多态继承等面向对象技术，QQ，微信，微博系统的建立，实现群管理等功能。 设计方案本次实验使用Qt进行开发，完成可视化编程，网络通信编程,数据库编...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"C&C++","slug":"C-C","count":8,"path":"api/categories/C-C.json"}],"tags":[{"name":"CPP","slug":"CPP","count":8,"path":"api/tags/CPP.json"},{"name":"编程","slug":"编程","count":14,"path":"api/tags/编程.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A8%A1%E6%8B%9F%E5%8D%B3%E6%97%B6%E9%80%9A%E4%BF%A1%E7%B3%BB%E7%BB%9F%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">模拟即时通信系统实现</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AE%BE%E8%AE%A1%E4%BB%BB%E5%8A%A1%E5%88%86%E6%9E%90\"><span class=\"toc-text\">设计任务分析</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AE%BE%E8%AE%A1%E6%96%B9%E6%A1%88\"><span class=\"toc-text\">设计方案</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AE%A2%E6%88%B7%E7%AB%AF\"><span class=\"toc-text\">客户端</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%90%8E%E7%AB%AF\"><span class=\"toc-text\">后端</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%89%8D%E7%AB%AF\"><span class=\"toc-text\">前端</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9C%8D%E5%8A%A1%E7%AB%AF\"><span class=\"toc-text\">服务端</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%90%8E%E7%AB%AF-1\"><span class=\"toc-text\">后端</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%89%8D%E7%AB%AF-1\"><span class=\"toc-text\">前端</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AF%A6%E7%BB%86%E8%AE%BE%E8%AE%A1\"><span class=\"toc-text\">详细设计</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF%E4%BF%9D%E5%AD%98\"><span class=\"toc-text\">用户信息保存</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%A5%BD%E5%8F%8B%E5%92%8C%E7%BE%A4%E7%9A%84%E6%B7%BB%E5%8A%A0\"><span class=\"toc-text\">好友和群的添加</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%BE%AE%E4%BF%A1QQ%E5%BE%AE%E5%8D%9A%E5%A4%9A%E5%B9%B3%E5%8F%B0%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">微信QQ微博多平台实现</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%8D%E5%90%8C%E5%B9%B3%E5%8F%B0%E7%94%A8%E6%88%B7%E5%AD%98%E4%B8%8D%E5%90%8C%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">不同平台用户存不同信息</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%80%9A%E4%BF%A1%E5%8A%9F%E8%83%BD%E7%9A%84%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">通信功能的实现</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%B6%88%E6%81%AF%E7%9A%84%E4%BC%A0%E9%80%92\"><span class=\"toc-text\">消息的传递</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95%E4%BF%9D%E5%AD%98\"><span class=\"toc-text\">历史记录保存</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93%E4%B8%8E%E4%BD%93%E4%BC%9A\"><span class=\"toc-text\">总结与体会</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BC%98%E7%BC%BA%E7%82%B9\"><span class=\"toc-text\">优缺点</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%B0%83%E8%AF%95%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">调试中遇到的问题</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol></li></ol></li></ol>","author":{"name":"Leo Meng","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/LeoMeng86","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"CPP第七次上机实验","uid":"f5549e64dae0916ed3c2d5ca434b3e7c","slug":"CPP第七次上机实验","date":"2022-09-08T01:56:17.000Z","updated":"2023-02-28T17:40:56.542Z","comments":true,"path":"api/articles/CPP第七次上机实验.json","keywords":null,"cover":[],"text":"组合模式的应用，每个公司都有总部，多个分公司，多个办事处等，为上下级同构的实体关系。每个公司有人力部，财务部，销售部等职能部门，不再有下级部门，分公司下面继续有子公司。总部需要快速了解总公司的组织结构+实体职责展示。两个多态函数，输出文字即可。 题目要求1）应用组合模式的模式设计...","link":"","photos":[],"count_time":{"symbolsCount":725,"symbolsTime":"1 mins."},"categories":[{"name":"C&C++","slug":"C-C","count":8,"path":"api/categories/C-C.json"}],"tags":[{"name":"CPP","slug":"CPP","count":8,"path":"api/tags/CPP.json"},{"name":"编程","slug":"编程","count":14,"path":"api/tags/编程.json"}],"author":{"name":"Leo Meng","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/LeoMeng86","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}