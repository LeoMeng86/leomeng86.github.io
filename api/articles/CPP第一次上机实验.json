{"title":"CPP第一次上机实验","uid":"303d0eaf42ba439d91837affe3563545","slug":"CPP第一次上机实验","date":"2022-09-08T01:53:00.000Z","updated":"2023-02-28T17:40:55.286Z","comments":true,"path":"api/articles/CPP第一次上机实验.json","keywords":null,"cover":null,"content":"<h2 id=\"题目要求\"><a href=\"#题目要求\" class=\"headerlink\" title=\"题目要求\"></a><strong>题目要求</strong></h2><p>第一个题目要求利用位运算的知识</p>\n<p>并通过位运算的方式完成十进制加减乘法；</p>\n<p>第二个题目要求计算1000！，结果超过两千位，远超int或者long long所能储存的值，应使用高精度乘法算法进行计算。</p>\n<h2 id=\"主要流程及解决思路\"><a href=\"#主要流程及解决思路\" class=\"headerlink\" title=\"主要流程及解决思路\"></a><strong>主要流程及解决思路</strong></h2><p>第一题：位运算共包括六种：与（&amp;）， 或（|）， 非（~），异或（^）， 左移（&lt;&lt;）, 右移（&gt;&gt;）。左移和右移运算可进行快速乘2，除2操作。</p>\n<table>\n<thead>\n<tr>\n<th>a</th>\n<th>b</th>\n<th>a&amp;b</th>\n<th>a|b</th>\n<th>~a</th>\n<th>a^b</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>1</td>\n<td>0</td>\n</tr>\n<tr>\n<td>0</td>\n<td>1</td>\n<td>0</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n</tr>\n<tr>\n<td>1</td>\n<td>0</td>\n<td>0</td>\n<td>1</td>\n<td>0</td>\n<td>1</td>\n</tr>\n<tr>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>0</td>\n<td>0</td>\n</tr>\n</tbody></table>\n<p>根据该真值表可以进行位运算等操作。</p>\n<p>计算机通过补码进行运算，即无需考虑加负数的问题。根据上学期的数字逻辑知识，可知完成十进制加法器可以通过异或运算计算本位（异或运算当且仅当a！&#x3D;b时值为1），可计算出所有本位。再通过与运算计算出进位情况，当且仅当a &#x3D;&#x3D; 1 &amp;&amp; b &#x3D;&#x3D; 1时值为1，符合运算进位的需求，此时进位保留在本位，应使用左移运算，完成进位操作，再循环进行进位与异或计算答案的异或，直到进位为0；</p>\n<p>减法运算，通过补码运算法则，对数据进行取补码运算先取反再加1，然后进行加法运算。乘法运算需要先判断a和b的正负，并转为正数，a*b，b个a相加，通过循环，完成b个a的相加运算，最后进行正负的判断。</p>\n<p>第二题：高精度计算，通过int数组，每个int存一位数，通过-1指示该位是否使用。</p>\n<p>高精度模拟了竖式计算法，完成按位相加后，需要维护数组的值在0到9之间。</p>\n<p>为操作方便，数据逆序存储，累乘操作需保存结果且乘数每次循环加1，完成后逆序输出。</p>\n<h2 id=\"程序难点以及我遇到的问题\"><a href=\"#程序难点以及我遇到的问题\" class=\"headerlink\" title=\"程序难点以及我遇到的问题\"></a><strong>程序难点以及我遇到的问题</strong></h2><p>第一题：之前未曾学习有关位运算实现的相关知识，只有去年学习的数字逻辑电路的知识进行辅助，未了解C++通过补码计算的规则，在进行加法运算时错误认为需要提前判断正负，导致减法运算时没有头绪。仔细完成相关知识学习之后，该问题迎刃而解。</p>\n<p>第二题：高精度加法和乘法的运用。</p>\n<h2 id=\"程序的优缺点\"><a href=\"#程序的优缺点\" class=\"headerlink\" title=\"程序的优缺点\"></a><strong>程序的优缺点</strong></h2><p>第一题：设置了较为合理的操作选项，完成了六种位运算封装并测试和三种十进制运算，使用迭代计算，减少了递归调用的时间损耗，减少堆栈的占用。</p>\n<p>第二题：使用int存位，使函数书写变得简洁，使用-1进行标识，方便了数位的判断，但使用memset()造成了时间的浪费。采用定长数组，在计算较小数的阶乘时，会造成空间的浪费。使用int存位相较于char存位，也造成了更大的浪费，若使用vector或者是string将进一步减少相关浪费。第一版将两个乘数全部使用高精度进行运算，浪费了空间和时间。在第二版中考虑到只有计算阶乘过程中第二个数不会出现爆int的情况，把第二个数直接以int形式乘到高精度数组中，然后进行数组维护，使程序更为简洁，提高了程序的效率。</p>\n<h2 id=\"我的收获\"><a href=\"#我的收获\" class=\"headerlink\" title=\"我的收获\"></a><strong>我的收获</strong></h2><p>进一步学习了位运算，学习C&#x2F;C++中接近底层的操作。巩固了高精度算法的运用，在编程过程中可以更多的考虑空间和时间的占用。在debug过程中有效利用IDE自带调试功能，以及在关键位置输出结果的方式，进行了函数的测试和使用。在C语言课程设计过程中学习的相关开发知识，进一步得到夯实，由过程化编程，进一步学习了面向对象的思想，巩固了类封装的相关知识。希望今后可以进一步提升自己编程能力，进一步优化程序。</p>\n<h2 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a><strong>代码实现</strong></h2><p><strong><a href=\"https://github.com/LeoMeng86/JLU_cpp_experiment.git\">https://github.com/LeoMeng86/JLU_cpp_experiment.git</a></strong></p>\n","text":"题目要求第一个题目要求利用位运算的知识 并通过位运算的方式完成十进制加减乘法； 第二个题目要求计算1000！，结果超过两千位，远超int或者long long所能储存的值，应使用高精度乘法算法进行计算。 主要流程及解决思路第一题：位运算共包括六种：与（&amp;）， 或（|）， ...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"C&C++","slug":"C-C","count":8,"path":"api/categories/C-C.json"}],"tags":[{"name":"CPP","slug":"CPP","count":8,"path":"api/tags/CPP.json"},{"name":"编程","slug":"编程","count":14,"path":"api/tags/编程.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E8%A6%81%E6%B1%82\"><span class=\"toc-text\">题目要求</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%BB%E8%A6%81%E6%B5%81%E7%A8%8B%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%80%9D%E8%B7%AF\"><span class=\"toc-text\">主要流程及解决思路</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%A8%8B%E5%BA%8F%E9%9A%BE%E7%82%B9%E4%BB%A5%E5%8F%8A%E6%88%91%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">程序难点以及我遇到的问题</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%A8%8B%E5%BA%8F%E7%9A%84%E4%BC%98%E7%BC%BA%E7%82%B9\"><span class=\"toc-text\">程序的优缺点</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%88%91%E7%9A%84%E6%94%B6%E8%8E%B7\"><span class=\"toc-text\">我的收获</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">代码实现</span></a></li></ol>","author":{"name":"Leo Meng","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/LeoMeng86","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"CPP第二次上机实验","uid":"c943e7e0ca1458fff17cfd3d10a5007a","slug":"CPP第二次上机实验","date":"2022-09-08T01:55:00.000Z","updated":"2023-02-28T17:40:56.645Z","comments":true,"path":"api/articles/CPP第二次上机实验.json","keywords":null,"cover":null,"text":"题目要求要求使用类封装的知识，和重载函数，构造函数，析构函数等知识，完成对string类型的封装。构造函数实现直接定义一个空string，用已经定义的string复制一个新的string，定义一个n位’m’字符的string，或者截取已有string的一部分。重载方面实现了str...","link":"","photos":[],"count_time":{"symbolsCount":956,"symbolsTime":"1 mins."},"categories":[{"name":"C&C++","slug":"C-C","count":8,"path":"api/categories/C-C.json"}],"tags":[{"name":"CPP","slug":"CPP","count":8,"path":"api/tags/CPP.json"},{"name":"编程","slug":"编程","count":14,"path":"api/tags/编程.json"}],"author":{"name":"Leo Meng","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/LeoMeng86","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"数据结构第七次上机实验","uid":"82c87e7d3d5a50c5b7d55245f7119e74","slug":"数据结构第七次上机实验","date":"2022-09-06T04:32:32.000Z","updated":"2023-02-28T17:40:59.499Z","comments":true,"path":"api/articles/数据结构第七次上机实验.json","keywords":null,"cover":null,"text":"第一题：序列调度有一个N个数的序列A：1，2，……，N。有一个后进先出容器D，容器的容量为C。如果给出一个由1到N组成的序列，那么可否由A使用容器D的插入和删除操作得到。 输入格式第1行，2个整数T和C，空格分隔，分别表示询问的组数和容器的容量，1≤T≤10，1≤C≤N。 第2到...","link":"","photos":[],"count_time":{"symbolsCount":"5.5k","symbolsTime":"5 mins."},"categories":[{"name":"数据结构","slug":"数据结构","count":6,"path":"api/categories/数据结构.json"}],"tags":[{"name":"编程","slug":"编程","count":14,"path":"api/tags/编程.json"},{"name":"数据结构","slug":"数据结构","count":6,"path":"api/tags/数据结构.json"}],"author":{"name":"Leo Meng","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/LeoMeng86","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}