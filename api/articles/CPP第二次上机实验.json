{"title":"CPP第二次上机实验","uid":"c943e7e0ca1458fff17cfd3d10a5007a","slug":"CPP第二次上机实验","date":"2022-09-08T01:55:00.000Z","updated":"2023-02-28T17:40:56.645Z","comments":true,"path":"api/articles/CPP第二次上机实验.json","keywords":null,"cover":null,"content":"<h2 id=\"题目要求\"><a href=\"#题目要求\" class=\"headerlink\" title=\"题目要求\"></a><strong>题目要求</strong></h2><p>要求使用类封装的知识，和重载函数，构造函数，析构函数等知识，完成对string类型的封装。构造函数实现直接定义一个空string，用已经定义的string复制一个新的string，定义一个n位’m’字符的string，或者截取已有string的一部分。重载方面实现了string类型的加法，赋值，下标访问，截取从strbegin，len长度的string，通过&lt;&lt;实现了流输出过程。</p>\n<h2 id=\"主要流程及解决思路\"><a href=\"#主要流程及解决思路\" class=\"headerlink\" title=\"主要流程及解决思路\"></a><strong>主要流程及解决思路</strong></h2><p>定义了CString类型，使用字符型（char）指针储存字符串的首地址，每次操作通过new函数申请空间，并delete[]掉之前的空间。使用重载函数，重载了+、&#x3D;、[]、()、&lt;&lt;等运算符，当两个string类型相加时候，使两个string串成一个，赋值时，将b的内容赋给a，并释放a之前申请的空间。为实现下标访问，重载了[]，实现了下标超界返回错误的设计。通过重载()，并传入两个int变量，截取了从strbegin共len位，通过友元并重载，完成&lt;&lt;，输出string内容的功能。</p>\n<h2 id=\"程序难点以及我遇到的问题\"><a href=\"#程序难点以及我遇到的问题\" class=\"headerlink\" title=\"程序难点以及我遇到的问题\"></a><strong>程序难点以及我遇到的问题</strong></h2><p>在重载(),实现截取功能时，对重载括号的虚参传入不熟悉，进行复习后，找到了相应的方法，犯了思维定式的错误，缺少派生的思想和能力。在重载&lt;&lt;时，开始没有使用友元，无法访问string中的内容，一度影响了输出的完成，通过进一步复习，顺利完成了相应函数。</p>\n<h2 id=\"程序的优缺点\"><a href=\"#程序的优缺点\" class=\"headerlink\" title=\"程序的优缺点\"></a><strong>程序的优缺点</strong></h2><p>圆满完成了老师布置的任务，和发布的相应测试。设置了不同方式的构造函数，使CString可以完成不同形式的初始化。使用了字符型指针的方法储存字符串的首指针的方法，进行动态申请字符型数组，并及时delete，相对于字符型数组减少了空间的损耗，相对于链表，减少了访问和删除时带来的复杂操作。缺点是，与stl中的string有较大差距，仅能实现其部分功能。</p>\n<h2 id=\"我的收获\"><a href=\"#我的收获\" class=\"headerlink\" title=\"我的收获\"></a><strong>我的收获</strong></h2><p>再次复习了类封装的相关知识，进一步领会重载和友元的意义和用法，对STL中的string类型有了更深的了解。对类内类外的权限有了进一步掌握，希望可以进一步提升自己的编程能力，对面向对象概念有更深的理解。</p>\n<h2 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a><strong>代码实现</strong></h2><p><strong><a href=\"https://github.com/LeoMeng86/JLU_cpp_experiment.git\">https://github.com/LeoMeng86/JLU_cpp_experiment.git</a></strong></p>\n","text":"题目要求要求使用类封装的知识，和重载函数，构造函数，析构函数等知识，完成对string类型的封装。构造函数实现直接定义一个空string，用已经定义的string复制一个新的string，定义一个n位’m’字符的string，或者截取已有string的一部分。重载方面实现了str...","link":"","photos":[],"count_time":{"symbolsCount":956,"symbolsTime":"1 mins."},"categories":[{"name":"C&C++","slug":"C-C","count":8,"path":"api/categories/C-C.json"}],"tags":[{"name":"CPP","slug":"CPP","count":8,"path":"api/tags/CPP.json"},{"name":"编程","slug":"编程","count":14,"path":"api/tags/编程.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E8%A6%81%E6%B1%82\"><span class=\"toc-text\">题目要求</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%BB%E8%A6%81%E6%B5%81%E7%A8%8B%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%80%9D%E8%B7%AF\"><span class=\"toc-text\">主要流程及解决思路</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%A8%8B%E5%BA%8F%E9%9A%BE%E7%82%B9%E4%BB%A5%E5%8F%8A%E6%88%91%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">程序难点以及我遇到的问题</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%A8%8B%E5%BA%8F%E7%9A%84%E4%BC%98%E7%BC%BA%E7%82%B9\"><span class=\"toc-text\">程序的优缺点</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%88%91%E7%9A%84%E6%94%B6%E8%8E%B7\"><span class=\"toc-text\">我的收获</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">代码实现</span></a></li></ol>","author":{"name":"Leo Meng","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/LeoMeng86","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"CPP第三次上机实验","uid":"60136b05a7965396e962d3122dd90a33","slug":"CPP第三次上机实验","date":"2022-09-08T01:55:21.000Z","updated":"2023-02-28T17:40:56.624Z","comments":true,"path":"api/articles/CPP第三次上机实验.json","keywords":null,"cover":null,"text":"地图导航模拟算法。在一个无向图中任意给定两点实现最短路径计算。要求采用Dijkstra（深度或广度或Floyd或Bellman-Ford）算法，以及堆排序算法或其它排序算法，利用递归，vector支持邻接表方式，对于路径和选择路径进行界面显示（可仅仅显示而不交互）。主要目的：ve...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"C&C++","slug":"C-C","count":8,"path":"api/categories/C-C.json"}],"tags":[{"name":"CPP","slug":"CPP","count":8,"path":"api/tags/CPP.json"},{"name":"编程","slug":"编程","count":14,"path":"api/tags/编程.json"}],"author":{"name":"Leo Meng","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/LeoMeng86","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"CPP第一次上机实验","uid":"303d0eaf42ba439d91837affe3563545","slug":"CPP第一次上机实验","date":"2022-09-08T01:53:00.000Z","updated":"2023-02-28T17:40:55.286Z","comments":true,"path":"api/articles/CPP第一次上机实验.json","keywords":null,"cover":null,"text":"题目要求第一个题目要求利用位运算的知识 并通过位运算的方式完成十进制加减乘法； 第二个题目要求计算1000！，结果超过两千位，远超int或者long long所能储存的值，应使用高精度乘法算法进行计算。 主要流程及解决思路第一题：位运算共包括六种：与（&amp;）， 或（|）， ...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"C&C++","slug":"C-C","count":8,"path":"api/categories/C-C.json"}],"tags":[{"name":"CPP","slug":"CPP","count":8,"path":"api/tags/CPP.json"},{"name":"编程","slug":"编程","count":14,"path":"api/tags/编程.json"}],"author":{"name":"Leo Meng","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"https://github.com/LeoMeng86","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}